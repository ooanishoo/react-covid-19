{"version":3,"sources":["api/index.js","components/OverviewData.js","components/CountryData.js","App.js","index.js"],"names":["fetchData","a","fetch","response","json","console","log","confirmed","value","countries","then","deaths","recovered","fetchCountryData","query","url","OverviewData","classes","makeStyles","theme","paper","padding","spacing","color","palette","text","secondary","boxShadow","backgroundColor","useStyles","Grid","container","item","xs","sm","md","lg","Paper","className","Typography","component","variant","start","end","duration","separator","CountryData","input","textOverflow","useState","search","setSearch","country","setCountry","setIsLoading","useEffect","trim","setTimeout","iso3","data","finally","Autocomplete","autoSelect","getOptionLabel","option","name","getOptionSelected","options","onChange","event","handleOnChange","renderInput","params","TextField","label","fullWidth","hiddenLabel","onClose","style","InputProps","disableUnderline","Title","fontSize","App","state","setState","height","title","createMuiTheme","typography","fontFamily","primary","main","responsiveFontSizes","ThemeProvider","Container","maxWidth","direction","justify","minHeight","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cfb23000.chunk.js","sourcesContent":["export const fetchData = async () => {\n  const url = \"https://covid19.mathdro.id/api\";\n\n  // fetch overview data\n  const response = await fetch(url);\n  const json = await response.json();\n\n  console.log(json.confirmed.value, \"fetchering\");\n\n  //fetch list od countries\n  const countries = await fetch(json.countries).then((response) =>\n    response.json()\n  );\n  //console.log(countries,'api cntries');\n\n  //return customized data\n  return {\n    confirmed: json.confirmed.value,\n    deaths: json.deaths.value,\n    recovered: json.recovered.value,\n    countries: countries.countries,\n  };\n};\n\n// fetch country's data\nexport const fetchCountryData = async (query) => {\n  const url = `https://covid19.mathdro.id/api/countries/${query}`;\n\n  const response = await fetch(url);\n  const json = await response.json();\n\n  return json;\n};\n","import React from \"react\";\nimport { Grid, Paper, Typography, makeStyles } from \"@material-ui/core\";\nimport CountUp from \"react-countup\";\n\nfunction OverviewData({ confirmed, deaths, recovered }) {\n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      padding: theme.spacing(2),\n      color: theme.palette.text.secondary,\n      boxShadow: \"4px 4px 31px 2px rgba(0, 0, 0, 0.10)\",\n      backgroundColor: \"#fff\",\n    },\n    confirmed: {\n      color: \"#FAC651\",\n    },\n    deaths: {\n      color: \"#F55661\",\n    },\n    recovered: {\n      color: \"#02D463\",\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12} sm={12} md={4} lg={4}>\n        <Paper className={classes.paper}>\n          <Typography component=\"body1\" variant=\"subtitle1\">\n            Confirmed\n          </Typography>\n          <br />\n          <Typography component=\"body1\" variant=\"h4\">\n            <CountUp\n              start={0}\n              end={confirmed}\n              duration={1.5}\n              separator=\",\"\n              className={classes.confirmed}\n            />\n          </Typography>\n        </Paper>\n      </Grid>\n      <Grid item xs={12} sm={12} md={4} lg={4}>\n        <Paper className={classes.paper}>\n          <Typography component=\"body1\" variant=\"subtitle1\">\n            Deaths\n          </Typography>\n          <br />\n          <Typography component=\"body1\" variant=\"h4\">\n            <CountUp\n              start={0}\n              end={deaths}\n              duration={1.5}\n              separator=\",\"\n              className={classes.deaths}\n            />\n          </Typography>\n        </Paper>\n      </Grid>\n      <Grid item xs={12} sm={12} md={4} lg={4}>\n        <Paper className={classes.paper}>\n          <Typography component=\"body1\" variant=\"subtitle1\">\n            Recovered\n          </Typography>\n          <br />\n          <Typography component=\"body1\" variant=\"h4\">\n            <CountUp\n              start={0}\n              end={recovered}\n              duration={1.5}\n              separator=\",\"\n              className={classes.recovered}\n            />\n          </Typography>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default OverviewData;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  TextField,\n  makeStyles,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { fetchCountryData } from \"../api\";\nimport CountUp from \"react-countup\";\n\nfunction CountryData({ countries }) {\n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      padding: theme.spacing(2),\n      color: theme.palette.text.secondary,\n      boxShadow: \"4px 4px 31px 2px rgba(0, 0, 0, 0.10)\",\n      backgroundColor: \"#fff\",\n    },\n    input: {\n      backgroundColor: \"#fff\",\n      \"&:hover\": {\n        backgroundColor: \"#fff\",\n      },\n      \"&::placeholder\": {\n        textOverflow: \"ellipsis !important\",\n        color: \"blue\",\n      },\n      boxShadow: \"4px 4px 31px 2px rgba(0, 0, 0, 0.10)\",\n    },\n  }));\n\n  const classes = useStyles();\n  const [search, setSearch] = useState(\"\");\n  const [country, setCountry] = useState({});\n  const { confirmed = 0, deaths = 0, recovered = 0 } = country;\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleOnChange = (value) => {\n    console.log({ value }, \"selected country\");\n    setSearch(value);\n  };\n\n  useEffect(() => {\n    console.log(search, \"search is\");\n    if (search && search.trim !== \"\") {\n      setIsLoading(true);\n\n      setTimeout(() => {\n        fetchCountryData(search.iso3)\n          .then((data) => {\n            console.log({ data });\n            setCountry(data);\n          })\n          .finally(setIsLoading(false));\n      }, 100);\n    }\n  }, [search]);\n\n  useEffect(() => {\n    console.log({ country });\n  }, [country]);\n\n  return (\n    <Grid>\n      <Grid>\n        <Autocomplete\n          autoSelect\n          getOptionLabel={(option) => option.name}\n          getOptionSelected={(option) => option.name}\n          options={countries}\n          value={search}\n          onChange={(event, value) => handleOnChange(value)}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              variant=\"outlined\"\n              label=\"Search\"\n              fullWidth\n              hiddenLabel\n              onClose={() => console.log(\"close\")}\n              style={{ backgroundColor: \"white\" }}\n              InputProps={{\n                ...params.InputProps,\n                className: classes.input,\n                disableUnderline: true,\n              }}\n            />\n          )}\n        />\n      </Grid>\n      <br />\n      <br />\n      <Paper className={classes.paper}>\n        <Grid container spacing={2} xs={12}>\n          <Grid item xs={4}>\n            <Typography component=\"body1\" variant=\"subtitle1\">\n              Confirmed\n            </Typography>\n            <br />\n            <Typography component=\"body1\" variant=\"h4\">\n              {confirmed && confirmed.value ? (\n                <CountUp\n                  start={0}\n                  end={confirmed && confirmed.value}\n                  duration={1.5}\n                  separator=\",\"\n                />\n              ) : (\n                \"0\"\n              )}\n            </Typography>\n          </Grid>\n          <Grid item xs={4}>\n            <Typography component=\"body1\" variant=\"subtitle1\">\n              Deaths\n            </Typography>\n            <br />\n            <Typography component=\"body1\" variant=\"h4\">\n              {deaths && deaths.value ? (\n                <CountUp\n                  start={0}\n                  end={deaths && deaths.value}\n                  duration={1.5}\n                  separator=\",\"\n                />\n              ) : (\n                \"0\"\n              )}\n            </Typography>\n          </Grid>\n          <Grid item xs={4}>\n            <Typography component=\"body1\" variant=\"subtitle1\">\n              Recovered\n            </Typography>\n            <br />\n            <Typography component=\"body1\" variant=\"h4\">\n              {recovered && recovered.value ? (\n                <CountUp\n                  start={0}\n                  end={recovered && recovered.value}\n                  duration={1.5}\n                  separator=\",\"\n                />\n              ) : (\n                \"0\"\n              )}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Grid>\n  );\n}\n\nexport default CountryData;\n","import React, { useState, useEffect } from \"react\";\nimport { fetchData } from \"./api\";\nimport {\n  Container,\n  Typography,\n  makeStyles,\n  createMuiTheme,\n  ThemeProvider,\n  responsiveFontSizes,\n  Grid,\n} from \"@material-ui/core\";\nimport OverviewData from \"./components/OverviewData\";\nimport CountryData from \"./components/CountryData\";\n\nfunction App() {\n  const [state, setState] = useState({\n    confirmed: 0,\n    deaths: 0,\n    recovered: 0,\n    countries: [],\n  });\n  useEffect(() => {\n    fetchData().then(({ confirmed, deaths, recovered, countries }) => {\n      setState({\n        confirmed,\n        deaths,\n        recovered,\n        countries,\n      });\n    });\n  }, []);\n\n  const useStyles = makeStyles((theme) => ({\n    container: {\n      height: \"100vh\",\n      //backgroundColor: \"#E1EBF1\",\n    },\n    title: {\n      fontSize: \"72px\",\n      color: \"#404040\",\n    },\n  }));\n  const classes = useStyles();\n  let theme = createMuiTheme({\n    typography: {\n      fontFamily: \"Spartan, sans-serif\",\n    },\n    palette: {\n      primary: { main: \"#fff\" },\n    },\n  });\n  theme = responsiveFontSizes(theme);\n  // fetch a country's data on search\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container maxWidth=\"lg\" className={classes.container}>\n        <Grid\n          container\n          spacing={0}\n          direction=\"column\"\n          justify=\"center\"\n          style={{\n            minHeight: \"100vh\",\n            fontFamily: \"Jost\",\n          }}\n        >\n          <Title />\n          <br />\n          <OverviewData {...state} />\n          <br />\n          <br />\n          <CountryData {...state} />\n        </Grid>\n      </Container>\n    </ThemeProvider>\n  );\n}\nconst Title = () => (\n  <Typography\n    variant=\"h1\"\n    component=\"h2\"\n    style={{\n      fontSize: \"72px\",\n      color: \"#404040\",\n    }}\n  >\n    COVID-19\n  </Typography>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}